version: "3.9"

services:
  mongo-beaver:
    image: mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --host localhost --username root --password 1234 --quiet
      interval: 15s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - mongo_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_SERVER: mongo-beaver
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
    depends_on:
      - mongo-beaver
    networks:
      - mongo_network

  beaver-audience-backend:
    image: rew1234/beaver-audience-application-backend:V2.0H
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "4004:4004"
    environment:
      DB_HOST: mongo-beaver
      DB_USER: root
      DB_PASSWORD: 1234
      DB_NAME: mongo-beaver
      DB_PORT: 27018 
      SERVER_PORT: 4004
      JWT_SECRET: JWT_SECRET
      DB_DATABASE_Public_URL: mongodb+srv://BeaverGroup:peT0rKwlPjPyYCR2@beaver.piraenz.mongodb.net/UserDB
    depends_on:
      - mongo-beaver
   
    networks:
      - mongo_network
  beaver-audience-frontend:
    image: rew1234/beaver-audience-application-frontend:V1.0
    ports:
      - "80:4001"  # You might want to map the port 4001 of the container to port 80 of the host
    environment:
      SERVER_PORT: 4001
      SERVER_HOST: "0.0.0.0"
      VITE_API_PORT: 4004
      VITE_API_HOST_IP: "ec2-13-213-77-86.ap-southeast-1.compute.amazonaws.com"
    # You can add other configurations such as depends_on if this service depends on others
    depends_on:
      - beaver-audience-backend  # Assuming frontend depends on backend service
    # Define other properties as required, such as volumes, networks, etc.
networks:
  mongo_network:
    driver: bridge

volumes:
  mongo_data:
